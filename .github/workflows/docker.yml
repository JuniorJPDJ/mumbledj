name: Publish Docker image
on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      
      - name: Docker meta (master)
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        if: ${{ github.ref_type == 'tag' || github.ref == 'refs/heads/master' }} 
        id: docker_meta_master
        with:
          images: ghcr.io/${{ github.repository_owner }}/mumbledj
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=true
      
      - name: Docker meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        if: ${{ github.ref_type == 'branch' && github.ref != 'refs/heads/master' }} 
        id: docker_meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/mumbledj
          tags: |
            type=ref,event=branch
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@3d68780484996aa9d417bb9016193885cdf1f299 # v3.6.0
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
       
      - name: Build and push
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445 # v6.5.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/386,linux/arm/v6,linux/arm/v7,linux/arm64
          push: True
          tags: ${{ steps.docker_meta_master.outputs.tags }} ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta_master.outputs.labels }} ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
